name: Docker Build and Push

on:
  push:
    branches: ["main"]

concurrency:
  group: docker-publish-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  FRONTEND_IMAGE_NAME: ${{ github.repository }}
  BACKEND_IMAGE_NAME: ${{ github.repository }}-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Node modules cache (frontend)
      - name: Cache node_modules (frontend)
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .next/cache
            .astro
            .vite
          key: ${{ runner.os }}-frontend-node-${{ hashFiles('package-lock.json', 'yarn.lock', 'pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-frontend-node-

      # Node modules cache (backend)
      - name: Cache node_modules (backend)
        uses: actions/cache@v4
        with:
          path: server/node_modules
          key: ${{ runner.os }}-backend-node-${{ hashFiles('server/package-lock.json', 'server/yarn.lock', 'server/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-backend-node-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Frontend image
      - name: Extract metadata for frontend Docker image
        id: frontend-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.frontend-meta.outputs.tags }}
          labels: ${{ steps.frontend-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Backend image
      - name: Extract metadata for backend Docker image
        id: backend-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.backend-meta.outputs.tags }}
          labels: ${{ steps.backend-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Optional: Verify images
      - name: Inspect frontend image
        run: docker image inspect ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:main
      - name: Inspect backend image
        run: docker image inspect ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:main
